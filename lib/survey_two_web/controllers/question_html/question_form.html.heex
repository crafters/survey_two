<.form :let={f} for={@changeset} action={@action}>
  <.input field={f[:title]} type="text" label="Title" />
  <.input field={f[:text]} type="textarea" label="Text" />
  <.input field={f[:required]} type="checkbox" label="Required" />
  <.input field={f[:position]} type="number" readonly label="Position" />
   <.input
    field={f[:type]}
    type="select"
    label="Question Type"
    options={[
      {"Text", "text"},
      {"Email", "email"},
      {"Phone", "phone"},
      {"Single Choice", "single_choice"},
      {"Multiple Choice", "multiple_choice"},
      {"Dropdown", "dropdown"}
    ]}
  />

 <div class="mt-4 options-container" data-show-for="single_choice,multiple_choice,dropdown">
    <label class="block text-sm font-medium text-gray-700 mb-2">Options</label>
    <div id="options-wrapper" class="option-list space-y-2">
      <%= 
        options = if @changeset.data.options != [] && @changeset.data.options != nil do @changeset.data.options else [] end
        for {option, idx} <- Enum.with_index(options) do 
      %>
        <div class="flex items-center">
          <textarea name="question[options][]" placeholder={"click to edit the option"} rows="1">{String.trim(option)}</textarea>
          <button type="button" class={"ml-2 text-red-500 remove-option #{if length(options) == 1, do: "hidden", else: ""}"}>Remove</button>
        </div>
      <% end %>
    </div>
    <button type="button" id="add-option" class="add-option btn">+ Add Option</button>
  </div>
  
  
  <footer>
    <.button variant="primary">Save Question</.button>
    <.button :if={@return_to} href={@return_to}>Cancel</.button>
  </footer>
</.form>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const typeSelect = document.querySelector('select[name="question[type]"]');
    const optionsContainer = document.querySelector('.options-container');
    const addOptionBtn = document.getElementById('add-option');
    const optionsWrapper = document.getElementById('options-wrapper');
    
    function autoResizeTextarea(textarea) {
      textarea.style.height = 'auto';
      textarea.style.height = textarea.scrollHeight + 'px';
    }
    
    function toggleOptionsVisibility() {
      const showForTypes = optionsContainer.dataset.showFor.split(',');
      if (showForTypes.includes(typeSelect.value)) {
        optionsContainer.style.display = 'block';
      } else {
        optionsContainer.style.display = 'none';
      }
    }
    
    function addOptionInput() {
      const optionCount = optionsWrapper.querySelectorAll('input').length + 1;
      const newOption = document.createElement('div');
      newOption.className = 'flex items-center';
      newOption.innerHTML = `
        <textarea name="question[options][]" placeholder="click to edit the option" rows="1"></textarea>
        <button type="button" class="ml-2 text-red-500 remove-option">Remove</button>
      `;
      optionsWrapper.appendChild(newOption);
      
      if (optionsWrapper.querySelectorAll('input').length > 1) {
        optionsWrapper.querySelectorAll('.remove-option').forEach(btn => {
          btn.classList.remove('hidden');
        });
      }
    }
    
    optionsWrapper.addEventListener('click', function(e) {
      if (e.target.classList.contains('remove-option')) {
        e.target.parentElement.remove();
        
        if (optionsWrapper.querySelectorAll('input').length <= 1) {
          optionsWrapper.querySelectorAll('.remove-option').forEach(btn => {
            btn.classList.add('hidden');
          });
        }
      }
    });
    
    function setupTextareaAutoResize() {
      document.querySelectorAll('textarea[name="question[options][]"]').forEach(textarea => {
        autoResizeTextarea(textarea);
        
        textarea.addEventListener('input', function() {
          autoResizeTextarea(this);
        });
      });
    }
    
    typeSelect.addEventListener('change', toggleOptionsVisibility);
    addOptionBtn.addEventListener('click', function() {
      addOptionInput();
      setupTextareaAutoResize();
    });
    
    toggleOptionsVisibility();
    setupTextareaAutoResize();
  });
</script>
